/*! For license information please see index.js.LICENSE.txt */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("Tempus",[],t):"object"==typeof exports?exports.Tempus=t():e.Tempus=t()}(self,(function(){return function(){"use strict";var e={};class t extends Date{constructor(){super(new Date(...arguments).toUTCString()),this.timeZone=window.timeZone||"UTC",this.locale="en-US"}get dayStart(){return t.dayStart(this)}get dayEnd(){return t.dayEnd(this)}get dayOfWeek(){return t.dayOfWeek(this)}get timeZoneOffset(){return new t.TimeZoneOffset(this.timeZone,this)}get startOfWeek(){const e=this.timeZone,s=new t(this);s.setTimeZone("UTC"),s.setHours(0,0,0,0);const n=t.getWeekStart(s);return this.setTimeZone(e),n}get endOfWeek(){const e=this.timeZone,s=new t(this);s.setTimeZone("UTC"),s.setHours(0,0,0,0);const n=t.getWeekEnd(s);return this.setTimeZone(e),n}get localeDate(){return t.getLocaleDate(this,this.locale,this.timeZone)}setTimeZone(e){const t=Number(this.timeZoneOffset);this.timeZone=e;const s=Number(this.timeZoneOffset);this.adjustByHours(s-t)}setLocale(e){this.locale=e}toSQLString(e="UTC",s="DATETIME"){return this.setTimeZone(e),t.toSQLString(this,s)}adjustByDays(e){return t.adjustByDays(e,this)}adjustByHours(e){return t.adjustByHours(e,this)}static daysInWeek=["Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday"];static dayStart=e=>{const s=e;return s.setUTCHours(0,0,0,0),new t(s)};static dayEnd=e=>{const s=e;return s.setUTCHours(23,59,59,999),new t(s)};static dayOfWeek=(e,t=!0)=>t?0===e.getDay()?6:e.getDay()-1:e.getDay();static getDateChangedByDays=(e,s)=>new t(new Date(s).getTime()+864e5*e);static adjustByDays=(e,t)=>t.setDate(t.getDate()+e);static adjustByHours=(e,t)=>t.setHours(t.getHours()+e);static decimalToTime=(e,t=!0)=>{let s="";e<0&&(e*=-1,s="-");const n=new Date(0,0);if(n.setSeconds(60*Number(e)*60),t)return s+n.toTimeString().slice(0,8);const r=n.toTimeString().slice(0,8);let i=0;return s+r.split(":").reverse().map(((e,t)=>0===t?(Number(e)>=30&&(i=1),String(0).padStart(2,"0")):1===t?String(Number(e)+i).padStart(2,"0"):e)).reverse().join(":").slice(0,5)};static toSQLString=(e,t="DATETIME")=>{t=t.toLowerCase();const s=e.toISOString();switch(t){case"year":return s.slice(0,4);case"date":return s.split("T")[0]}return s.slice(0,-5).replace("T"," ")};static getWeekStart=e=>{const s=new Date(e),n=s.getDay(),r=s.getDate()-n+(0===n?-6:1),i=new t(s.setDate(r));return i.setUTCHours(0,0,0,0),i};static getWeekEnd=e=>{const s=t.getDateChangedByDays(6,t.getWeekStart(e));return s.setUTCHours(23,59,59,999),s};static getLocaleDate=(e,t="en-US",s=!1)=>{const n={weekday:"long",year:"numeric",month:"long",day:"numeric"};return s&&(n.timeZone=s),e.toLocaleString(t,n)};static TimeZoneOffset=class{constructor(e,t=new Date){const s=t.toLocaleString("en",{timeZone:e,timeStyle:"long"}).split(" ").slice(-1)[0],n=t.toString(),r=(Date.parse(`${n} UTC`)-Date.parse(`${n} ${s}`))/36e5;this.hours=r}toString(){return t.decimalToTime(this.hours,!1)}[Symbol.toPrimitive](e){return"number"===e?this.hours:t.decimalToTime(this.hours,!1)}}}return e.default=t,e.default}()}));
//# sourceMappingURL=index.js.map